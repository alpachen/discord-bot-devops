name: 🤖 Discord Bot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: ✅ 程式碼品質檢查
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 獲取程式碼
      uses: actions/checkout@v4
      
    - name: 🐍 設定 Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: 📦 安裝依賴套件
      run: |
        python -m pip install --upgrade pip
        pip install discord.py python-dotenv
        echo "✅ 依賴安裝完成"
        
    - name: 🔍 Python 語法檢查
      run: |
        python -m py_compile bot.py
        echo "✅ 語法檢查通過"
        
    - name: 🧪 模組導入測試
      run: |
        # 只測試基礎導入，不觸發需要 Token 的功能
        python -c "
        import discord
        from discord.ext import commands
        print('✅ 基礎模組導入成功')
        "
        echo "✅ 導入測試完成"
    
    - name: 📢 發送 Discord 通知
      if: always()  # 無論成功失敗都發送
      run: |
        # 使用簡單英文訊息避免編碼問題
        if [ "${{ job.status }}" = "success" ]; then
          MESSAGE="🎉 CI/CD Success! All tests passed. By ${{ github.actor }}"
        else
          MESSAGE="❌ CI/CD Failed! Please check errors. By ${{ github.actor }}"
        fi
        
        # 發送到 Discord Webhook
        curl -X POST \
          -H "Content-Type: application/json" \
          -d "{\"content\": \"$MESSAGE\"}" \
          "${{ secrets.DISCORD_WEBHOOK }}"
          
     - name: 📢 使用 Bot 發送通知
      if: always()
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      run: |
        # 安裝額外依賴（如果需要的話）
        pip install discord.py
        
        # 根據執行狀態傳遞參數
        if [ "${{ job.status }}" = "success" ]; then
          python scripts/send_notification.py success
        else
          python scripts/send_notification.py failure
        fi
        